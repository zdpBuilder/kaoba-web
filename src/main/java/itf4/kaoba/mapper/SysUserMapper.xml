<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="itf4.kaoba.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="itf4.kaoba.model.SysUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="login_id" jdbcType="VARCHAR" property="loginId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="creater" jdbcType="VARCHAR" property="creater" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="updater" jdbcType="VARCHAR" property="updater" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, login_id, user_name, user_password, status, creater, create_time, updater, update_time
  </sql>
  <select id="selectByExample" parameterType="itf4.kaoba.model.SysUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
       </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null and pageSize != null and pageSize != 0">
	    limit #{startRow},#{pageSize}
	</if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="itf4.kaoba.model.SysUserExample">
    delete from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="itf4.kaoba.model.SysUser">
    insert into sys_user (id, login_id, user_name, 
      user_password, status, creater, 
      create_time, updater, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{loginId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userPassword,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{creater,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="itf4.kaoba.model.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loginId != null">
        login_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updater != null">
        updater,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginId != null">
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="itf4.kaoba.model.SysUserExample" resultType="java.lang.Long">
    select count(*) from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loginId != null">
        login_id = #{record.loginId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.creater != null">
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updater != null">
        updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_user
    set id = #{record.id,jdbcType=INTEGER},
      login_id = #{record.loginId,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      creater = #{record.creater,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      updater = #{record.updater,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="itf4.kaoba.model.SysUser">
    update sys_user
    <set>
      <if test="loginId != null">
        login_id = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="itf4.kaoba.model.SysUser">
    update sys_user
    set login_id = #{loginId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      updater = #{updater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <!--根据查询条件查询出所有的记录,不用分页,用于excel导出功能  -->  
    <select id="getAllUsersForExcel" parameterType="itf4.kaoba.model.SysUser" resultMap="BaseResultMap">  
        select 
         login_id, user_name, user_password, status, creater, create_time, updater, update_time
        from sys_user
        where  1=1    
        <if test="login_id != null and login_id !=''">and login_id=#{login_id}</if>  
        <if test="user_name != null and user_name !=''">and  user_name=#{user_name}</if>  
        <if test="user_password != null and user_password !=''">and  user_password=#{user_password}</if>  
        <if test="status != null and status !=''">and  status=#{status}</if>  
        <if test="creater!=null and creater!=''">and creater=#{creater}</if> 
          <if test="create_time!=null and create_time!=''">and create_time=#{create_time}</if>  
            <if test="updater!=null and updater!=''">and updater=#{updater}</if>  
              <if test="update_time!=null and update_time!=''">and update_time=#{update_time}</if>           
    </select>
    
   <insert id="insertUsersBatch" parameterType="java.util.List">  
   insert into sys_user ( login_id, user_name, 
      user_password, status, creater, 
      create_time, updater, update_time
      )
    values 
    <foreach collection="list" item="item" index="index" separator=",">  
     (
     #{item.loginId,jdbcType=VARCHAR}, #{item.userName,jdbcType=VARCHAR}, 
      #{item.userPassword,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER}, #{item.creater,jdbcType=VARCHAR}, 
      #{item.createTime,jdbcType=VARCHAR}, #{item.updater,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=VARCHAR}
      ) 
    </foreach>  
</insert>
<delete id ="delUsersBatch" parameterType = "java.util.List">    
       delete from sys_user where id in  
    <foreach collection="list" item = "item" index="index" open="(" separator="," close=")">
    #{ item.id}  
    </foreach>  
</delete>  
  
</mapper>